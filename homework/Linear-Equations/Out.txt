Part A:
Generate a random matrix A (8x3)
A=
      2.35       10.1       10.3 
      5.19       2.98        8.1 
      9.68       2.35       5.09 
      8.59       5.01       6.77 
      2.65       1.69       8.72 
      8.33        5.1       1.62 
      1.16       8.41       10.6 
      1.49        3.5       6.29 

Factorize it into QR by decomposing with call to QRGS.dec(A)
Q = 
      0.14        0.7     -0.127 
      0.31    -0.0091      0.405 
     0.578     -0.276     0.0876 
     0.514   -0.00873    -0.0231 
     0.158     0.0093       0.66 
     0.498     0.0107      -0.56 
    0.0691      0.624      0.111 
    0.0892      0.211      0.224 
R = 
      16.7       9.98       13.9 
         0       12.4       13.7 
         0          0       9.69 

Then Q^TQ=1 and QR=A is checked

Q^TQ= 
         1   4.86e-17   3.82e-17 
  4.86e-17          1   9.02e-17 
  3.82e-17   9.02e-17          1 

QR=A ?=> True

#####################

Generate a square matrix A (5x5)
A = 
      7.98       4.36       9.62       3.08       6.73 
      2.08       10.9       9.75       9.54       6.77 
      10.9        7.2       5.62        8.5       8.66 
      10.1       3.43       8.82       6.92       3.35 
      2.63       8.38       6.55       8.66       5.82 
Generate a random vector b with 5 rows
b =       9.78       3.11       14.6       10.6       12.5 

solve Ax=b with QRx=b
x =      -4.23      -12.5        1.5       7.68       8.86 

Ax=b ?=> True

Part b:
Using square matrix A from above and the factorized QR aswell
Calculates inverse of A refered to as B
B = 
    -0.141      0.375      0.208     0.0697     -0.623 
    -0.331       1.08      0.389   -0.00442      -1.46 
     0.131      -0.11     -0.171      0.052        0.2 
    0.0481     -0.599     -0.201     0.0683      0.902 
     0.321     -0.715     -0.163     -0.185      0.982 
A*B = I ? => True
