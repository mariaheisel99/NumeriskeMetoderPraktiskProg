Part A:
Generate a random matrix A (8x3)
A=
      4.32       7.55       6.87 
      3.55       3.36        4.4 
      1.67       8.75       1.23 
       2.5       1.12       5.25 
      8.54       3.28       9.39 
      2.91       9.69       6.66 
      10.2       4.69       10.9 
      9.59       4.12       10.8 

Factorize it into QR by decomposing with call to QRGS.dec(A)
Q = 
     0.243       0.38      0.209 
     0.199      0.085    0.00121 
    0.0937      0.613     -0.592 
      0.14    -0.0398       0.62 
     0.479     -0.179    -0.0557 
     0.163      0.623      0.424 
     0.572     -0.153     -0.196 
     0.538     -0.167    -0.0244 
R = 
      17.8       11.5         21 
         0       12.5       2.54 
         0          0       3.88 

Then Q^TQ=1 and QR=A is checked

Q^TQ= 
         1   4.02e-16   1.94e-15 
  4.02e-16          1   3.38e-17 
  1.94e-15   3.38e-17          1 

QR=A ?=> True

#####################

Generate a square matrix A (5x5)
A = 
      5.46       6.59       9.37       10.9       4.68 
      9.18       2.91       3.68       8.87       2.83 
      1.36       5.82       9.36       2.88        2.5 
      2.76        6.8       3.59       5.57       2.39 
      8.59       2.95       10.1       10.5       6.91 
Generate a random vector b with 8 rows
b =       4.65       2.72       8.54       11.7       11.2       8.45       7.39         15 

solve Ax=b with QRx=b
x =       1.03       2.31      -1.26      -2.67       5.26 

Ax=b ?=> True

Part b:
Using square matrix A from above and the factorized QR aswell
Calculates inverse of A refered to as B
B = 
    -0.228      0.199      0.116      0.027     0.0215 
    -0.122     0.0164     0.0514      0.223    -0.0197 
    0.0873     0.0424      0.143       -0.2    -0.0594 
     0.337    -0.0301     -0.149     -0.136     -0.115 
    -0.306     -0.271     -0.148      0.371      0.388 
A*B = I ? => True
