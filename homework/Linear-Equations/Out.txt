Part A:
Generate a random matrix A (8x3)
A=
      5.63       3.02       10.7 
      2.43       4.78       7.71 
      4.31       9.01       5.29 
      8.77        4.8       7.24 
      8.88       7.13       10.5 
      6.52       9.89       6.84 
       3.1       3.32       2.14 
      8.49       5.48       3.65 

Factorize it into QR by decomposing with call to QRGS.dec(A)
Q = 
     0.307     -0.231      0.644 
     0.132       0.32      0.501 
     0.235      0.633     -0.097 
     0.479     -0.348     -0.077 
     0.484     -0.077      0.196 
     0.356      0.506     -0.134 
     0.169     0.0732     -0.138 
     0.463     -0.235     -0.493 
R = 
      18.3         16       18.6 
         0       8.28       2.79 
         0          0        8.7 

Then Q^TQ=1 and QR=A is checked

Q^TQ= 
         1   2.78e-17  -3.61e-16 
  2.78e-17          1  -4.16e-17 
 -3.61e-16  -4.16e-17          1 

QR=A ?=> True

#####################

Generate a square matrix A (5x5)
A = 
      10.9       4.45       4.14       3.98       5.51 
       8.2       6.66       9.61       4.93       5.25 
      6.55       9.42       6.65       3.45       10.2 
      1.02       2.15       9.33       6.62       8.25 
      7.43       7.57       3.04       3.18       7.19 
Generate a random vector b with 5 rows
b =       10.3       9.89       9.97       11.3       10.6 

solve Ax=b with QRx=b
x =     0.0795      0.532     -0.666       2.39     0.0633 

Ax=b ?=> True

Part b:
Using square matrix A from above and the factorized QR aswell
Calculates inverse of A refered to as B
B = 
     0.173    -0.0205     0.0579     -0.051     -0.141 
    -0.252      0.144     -0.143    -0.0469      0.344 
    0.0511     0.0887      0.194    -0.0346     -0.339 
     -0.22     0.0914      -0.55      0.173      0.684 
     0.163     -0.209      0.252     0.0401     -0.237 
A*B = I ? => True
