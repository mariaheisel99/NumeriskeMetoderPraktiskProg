Part A:
Generate a random matrix A (8x3)
A=
      9.16       9.14       5.71 
      1.03        5.2       6.39 
      1.13       3.14       9.86 
      6.57       10.1       2.83 
      10.5       4.85       10.1 
      10.9       1.75       8.57 
      7.04       4.19       1.51 
      8.69       10.3       7.88 

Factorize it into QR by decomposing with call to QRGS.dec(A)
Q = 
     0.416      0.232     -0.168 
    0.0468      0.404      0.387 
    0.0514      0.211      0.733 
     0.299      0.485     -0.312 
     0.478     -0.244      0.246 
     0.496     -0.551      0.167 
      0.32    -0.0784     -0.314 
     0.395      0.365     0.0191 
R = 
        22       15.8       16.7 
         0         11       2.93 
         0          0       11.4 

Then Q^TQ=1 and QR=A is checked

Q^TQ= 
         1   1.39e-16   2.78e-17 
  1.39e-16          1   7.03e-17 
  2.78e-17   7.03e-17          1 

QR=A ?=> True

#####################

Generate a square matrix A (5x5)
A = 
      7.05       10.8       5.72        3.1       9.46 
      8.76       3.22       3.84        6.5       9.98 
      6.37       3.17       8.69       8.12       5.59 
      9.68       8.65       5.94       3.22       4.72 
       6.2       10.2       1.14       3.91       6.81 
Generate a random vector b with 8 rows
b =       15.9       15.8       6.81       12.5       3.67       3.63       1.83       13.1 

solve Ax=b with QRx=b
x =       1.25     -0.865       1.11      -2.22       1.79 

Ax=b ?=> True

Part b:
Using square matrix A from above and the factorized QR aswell
Calculates inverse of A refered to as B
B = 
    -0.112      0.095    -0.0865       0.18    -0.0376 
    0.0167     -0.102     0.0245   -0.00725      0.111 
     0.127     -0.065     0.0686     0.0165     -0.148 
    -0.153    -0.0302      0.144    -0.0807      0.195 
     0.144     0.0944    -0.0522     -0.109    -0.0726 
A*B = I ? => True
