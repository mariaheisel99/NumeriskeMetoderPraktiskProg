Part A:
Generate a random matrix A (8x3)
A=
      4.24        9.5       10.1 
      4.04       1.11       4.16 
      3.08       10.2       8.66 
      5.24       5.61       5.41 
      6.62       3.85       6.59 
      10.4       10.1       8.75 
      2.72        2.4       10.9 
      4.63        4.1       10.5 

Factorize it into QR by decomposing with call to QRGS.dec(A)
Q = 
     0.267      0.523      0.122 
     0.254     -0.315     0.0913 
     0.194      0.721    0.00296 
     0.329     0.0191     -0.146 
     0.417     -0.308   -0.00198 
     0.656    -0.0742     -0.417 
     0.171    -0.0428      0.744 
     0.291    -0.0713      0.477 
R = 
      15.9       16.5       20.6 
         0       9.78       6.42 
         0          0       10.3 

Then Q^TQ=1 and QR=A is checked

Q^TQ= 
         1   2.36e-16   5.27e-16 
  2.36e-16          1  -1.94e-16 
  5.27e-16  -1.94e-16          1 

QR=A ?=> True

#####################

Generate a square matrix A (5x5)
A = 
      7.41       3.36       7.08       10.3       3.63 
       2.9       2.69       2.21       10.9       5.79 
      5.49       9.51       3.41       6.72       5.74 
      1.17       7.09       2.15       1.02       2.45 
      10.3       4.53       7.41       5.52       6.34 
Generate a random vector b with 5 rows
b =       9.51       14.3        6.2       4.15       9.24 

solve Ax=b with QRx=b
x =      -2.03     -0.627       2.12      0.243       2.51 

Ax=b ?=> True

Part b:
Using square matrix A from above and the factorized QR aswell
Calculates inverse of A refered to as B
B = 
   0.00411     -0.183      0.343     -0.397    0.00812 
    0.0356    -0.0824      0.141     0.0169    -0.0793 
     0.103     0.0858      -0.43      0.444     0.0803 
    0.0941     0.0135     0.0828    -0.0939     -0.105 
    -0.234      0.245     -0.229      0.198      0.199 
A*B = I ? => True
