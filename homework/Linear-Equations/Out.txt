Part A:
Generate a random matrix A (8x3)
A=
      4.36       6.22       7.06 
      7.49       6.04       10.7 
      1.48       6.25       4.26 
      5.08       1.17       9.41 
      8.69       10.9       6.97 
      6.96       6.28       1.86 
      8.19       2.54       8.73 
      7.02       9.66       7.66 

Factorize it into QR by decomposing with call to QRGS.dec(A)
Q = 
     0.235      0.241      0.297 
     0.404    -0.0889       0.32 
    0.0798       0.53      0.339 
     0.274     -0.377      0.458 
     0.469      0.318     -0.249 
     0.376    -0.0106     -0.649 
     0.442     -0.537    -0.0151 
     0.379       0.35     0.0409 
R = 
      18.5         17       19.6 
         0       9.25     -0.349 
         0          0        8.5 

Then Q^TQ=1 and QR=A is checked

Q^TQ= 
         1   1.94e-16  -1.01e-16 
  1.94e-16          1   3.12e-17 
 -1.01e-16   3.12e-17          1 

QR=A ?=> True

#####################

Generate a square matrix A (5x5)
A = 
      4.13       1.17       7.56       6.86       2.62 
      1.65        2.8       1.07       7.55       8.14 
      6.52       2.72       8.84       2.17       7.01 
      5.07       3.74       5.24       7.59       9.47 
      5.88       4.85       8.55       4.26       9.67 
Generate a random vector b with 8 rows
b =       2.91       3.61         12       7.32       7.83       10.3       15.4       7.16 

solve Ax=b with QRx=b
x =      0.832       -3.6      0.367      -0.66       2.08 

Ax=b ?=> True

Part b:
Using square matrix A from above and the factorized QR aswell
Calculates inverse of A refered to as B
B = 
    -0.152     -0.737     -0.138       1.07     -0.288 
   -0.0359     -0.798     -0.899      0.744      0.605 
     0.154      0.376       0.18     -0.645      0.143 
       0.1    -0.0379     -0.127      0.135    -0.0352 
   -0.0701      0.532      0.431     -0.513     -0.136 
A*B = I ? => True
