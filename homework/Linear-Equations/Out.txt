Part A:
Generate a random matrix A (8x3)
A=
      6.31       6.11       8.56 
       5.4       6.91       10.4 
      5.85       2.45       5.49 
      1.21       8.47        2.5 
      2.97       5.08       7.48 
      7.21       6.66       7.61 
      10.1       3.53       5.57 
      3.97       1.14        5.4 

Factorize it into QR by decomposing with call to QRGS.dec(A)
Q = 
     0.375      0.157      0.151 
     0.321      0.302      0.463 
     0.348     -0.176     0.0465 
    0.0719       0.76      -0.49 
     0.177      0.294      0.412 
     0.429      0.146     -0.137 
       0.6     -0.373     -0.467 
     0.236     -0.171      0.338 
R = 
      16.8       12.1       17.8 
         0         10       5.74 
         0          0       6.42 

Then Q^TQ=1 and QR=A is checked

Q^TQ= 
         1   2.98e-16   2.64e-16 
  2.98e-16          1  -2.91e-16 
  2.64e-16  -2.91e-16          1 

QR=A ?=> True

#####################

Generate a square matrix A (5x5)
A = 
      4.02       5.87       5.99        6.5       6.81 
      1.56       5.91       7.75       10.8       6.81 
      7.93       3.78       2.52       3.93       5.31 
      5.47       10.4       9.08       8.37       5.89 
       8.3       8.15       1.76       8.77       9.74 
Generate a random vector b with 5 rows
b =       5.17       1.26       5.43       8.54       9.41 

solve Ax=b with QRx=b
x =      0.233        1.2     -0.197     -0.708       0.44 

Ax=b ?=> True

Part b:
Using square matrix A from above and the factorized QR aswell
Calculates inverse of A refered to as B
B = 
    -0.184     0.0363      0.238     0.0334    -0.0469 
  -0.00961     -0.146     -0.208      0.165      0.122 
     0.174  -0.000915     0.0889    0.00499     -0.172 
     -0.41      0.256      0.102     0.0159     0.0428 
     0.503     -0.139     -0.137     -0.182      0.033 
A*B = I ? => True
