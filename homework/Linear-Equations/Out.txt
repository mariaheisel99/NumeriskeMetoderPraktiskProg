Part A:
Generate a random matrix A (8x3)
A=
      1.55       2.88       3.76 
      10.5       3.16       9.36 
      8.49       8.92       2.26 
      3.14       9.17       2.32 
      7.02        6.7       1.41 
      3.68        4.6       9.33 
      9.55       4.69       6.38 
      3.37       2.87       6.74 

Factorize it into QR by decomposing with call to QRGS.dec(A)
Q = 
    0.0819      0.185      0.269 
     0.552     -0.468      0.164 
     0.448      0.292     -0.369 
     0.165       0.73     0.0342 
      0.37      0.171     -0.353 
     0.194      0.205      0.671 
     0.504     -0.236    -0.0569 
     0.178     0.0452       0.43 
R = 
        19       13.7       13.6 
         0       9.46     -0.382 
         0          0       10.1 

Then Q^TQ=1 and QR=A is checked

Q^TQ= 
         1   1.73e-17   1.39e-17 
  1.73e-17          1   3.47e-18 
  1.39e-17   3.47e-18          1 

QR=A ?=> True

#####################

Generate a square matrix A (5x5)
A = 
      10.8       2.99       7.93       10.6       6.88 
      8.99       2.75        8.9       10.4       6.46 
      4.97       4.38       4.61       4.85       3.85 
      6.17       10.4        3.1       8.56       5.28 
      6.01       9.26       7.09       9.18       6.98 
Generate a random vector b with 5 rows
b =         15       15.6       4.64       6.83       2.07 

solve Ax=b with QRx=b
x =       1.95      0.357       1.58       2.77       -7.1 

Ax=b ?=> True

Part b:
Using square matrix A from above and the factorized QR aswell
Calculates inverse of A refered to as B
B = 
    0.0731    -0.0831      0.474     0.0908     -0.325 
    -0.245      0.121      0.343       0.13     -0.157 
    -0.503       0.46      0.533   -0.00863     -0.216 
     -0.26      0.473     -0.453      0.241     -0.113 
      1.12      -1.18     -0.808     -0.559          1 
A*B = I ? => True
